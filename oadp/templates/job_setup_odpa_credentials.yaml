{{- if eq .Values.dpaInstance.storage "ocs" -}}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: setup-oadp-credentials
spec:
  template:
    spec:
      containers:
        - name: setup-oadp-credentials
          image: registry.redhat.io/openshift4/ose-cli:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -c
            - |

              echo "Wait until secret with bucket access credentials is available..."

              # Wait for the secret to be available
              until oc get secret obc-backups -n {{ .Release.Namespace }}; do sleep 30; done

              # Read access credentials from secret
              AWS_ACCESS_KEY_ID=$(oc get secret obc-backups -n {{ .Release.Namespace }} -o jsonpath='{.data.AWS_ACCESS_KEY_ID}{"\n"}' | base64 -d)
              AWS_SECRET_ACCESS_KEY=$(oc get secret obc-backups -n {{ .Release.Namespace }} -o jsonpath='{.data.AWS_SECRET_ACCESS_KEY}{"\n"}' | base64 -d)

              # Read bucket config from configmap
              BUCKET_HOST=$(oc -n {{ .Release.Namespace }} get cm obc-backups -o jsonpath='{.data.BUCKET_HOST}{"\n"}')
              BUCKET_NAME=$(oc -n {{ .Release.Namespace }} get cm obc-backups -o jsonpath='{.data.BUCKET_NAME}{"\n"}')

              echo "Bucket Host: ${BUCKET_HOST}"
              echo "Bucket Name: ${BUCKET_NAME}"

              # Create secret with access credentials
              cat << EOF > /tmp/credentials-velero
              [default]
              aws_access_key_id=${AWS_ACCESS_KEY_ID}
              aws_secret_access_key=${AWS_SECRET_ACCESS_KEY}
              EOF

              oc delete secret cloud-credentials -n {{ .Release.Namespace }}
              oc -n {{ .Release.Namespace }} create secret generic cloud-credentials --from-file cloud=/tmp/credentials-velero

              # Wait until DataProtectionApplication is available
              until oc get dataprotectionapplications.oadp.openshift.io oadp-dpa -n {{ .Release.Namespace }}; do sleep 30; done

              # Patch DataProtectionApplication with bucket properties
              # Patch s3Url
              oc -n {{ .Release.Namespace }} patch dataprotectionapplication oadp-dpa \
                --type=json \
                --patch '[{"op":"replace","path":"/spec/backupLocations/0/velero/config/s3Url","value":"http://${BUCKET_HOST}"}]'

              # Patch bucket name
              oc -n {{ .Release.Namespace }} patch dataprotectionapplication oadp-dpa \
                --type=json \
                --patch '[{"op":"replace","path":"/spec/backupLocations/0/velero/objectStorage/bucket","value":"${BUCKET_NAME}"}]'

              # cat << EOF | oc apply -f -
              # ---
              # apiVersion: oadp.openshift.io/v1alpha1
              # kind: DataProtectionApplication
              # metadata:
              #   name: oadp-dpa
              # spec:
              #   configuration:
              #     velero:
              #       featureFlags:
              #       - EnableCSI
              #       defaultPlugins:
              #       - csi
              #       - openshift
              #       - aws
              #       - kubevirt
              #   backupLocations:
              #   - velero:
              #       config:
              #         profile: default
              #         region: localstorage
              #         s3Url: http://${BUCKET_HOST}
              #         s3ForcePathStyle: "true"
              #       provider: aws
              #       credential:
              #         name: cloud-credentials
              #         key: cloud
              #       default: true
              #       objectStorage:
              #         bucket: ${BUCKET_NAME}
              #         prefix: velero
              # EOF

      dnsPolicy: ClusterFirst
      restartPolicy: OnFailure
      serviceAccount: cli-job-sa
      serviceAccountName: cli-job-sa
      terminationGracePeriodSeconds: 30
{{- end -}}
